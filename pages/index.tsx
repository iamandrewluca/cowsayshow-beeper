import type { NextPage } from "next";
import Head from "next/head";
import useSound from "use-sound";
import mqtt from "mqtt";
import { useEffect, useState } from "react";



const Home: NextPage = () => {


  function onSubmit(e: any) {
    e.preventDefault();


  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <form
        className="p-5 flex flex-wrap gap-5 max-w-6xl mx-auto"
        onSubmit={onSubmit}
      >
        <input
          type="text"
          placeholder="User"
          className="rounded"
        />
        <input
          type="password"
          placeholder="Password"
          className="rounded"
        />
        <input type="text" placeholder="Host" className="rounded" />
        <input
          type="submit"
          value="Connect"
          className="px-5 rounded cursor-pointer"
        />
      </form>
      <div className="px-5 py-5 flex flex-wrap justify-center gap-20 max-w-6xl mx-auto">
        {sounds.map((s) => (
          <Sound key={s} name={s} />
        ))}
      </div>
    </div>
  );
};

export default Home;

const sounds = [
  "badumtss",
  "coin",
  "applause",
  "cricket",
  "drumroll",
  "gong",
  "sadtrombone",
  "cowsay",
  "booing",
  "cheering",
];

function Sound({ name }: any) {

  const [play] = useSound(`/sounds/${name}.mp3`);

  const handleClick = async () => {
    console.log(`Click! on ${name}`);

    console.log(event.target);
    await fetch(
      '/api/trigger-sound',
      {
        body: JSON.stringify({
          name: `${name}`
        }),
        headers: {
          'Content-Type': 'application/json'
        },
        method: 'POST'
      }
    );


    play();
  };

  return (
    <div
      onClick={handleClick}
      className="bg-red-100 w-36 h-36 rounded-3xl items-center justify-center cursor-pointer shadow-2xl flex hover:bg-blue-100"
    >
      {name}
    </div>
  );
}

function useField(init: string) {
  const [state, setState] = useState(init);

  function onChange(e: any) {
    setState(e.target.value);
  }

  return { value: state, onChange };
}

declare global {
  namespace NodeJS {
    interface ProcessEnv {
      NEXT_PUBLIC_MQTT_USER: string;
      NEXT_PUBLIC_MQTT_PASS: string;
      NEXT_PUBLIC_MQTT_HOST: string;
    }
  }
}
